package com.mohsen.game.ui.helper;import android.graphics.Typeface;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.CheckBox;import android.widget.EditText;import android.widget.TextView;import com.mohsen.game.application.MainApplication;import com.mohsen.game.application.persian.calendar.PersianCalendar;import java.util.Hashtable;public class FontHelper {    private static final String TAG = "Typefaces";    private static final Hashtable<String, Typeface> cache = new Hashtable<String, Typeface>();    public static Typeface getTypeface(String name, boolean faNumeric) {        String defaultFontStr = "fonts/faDigit/iran.ttf";        String assetPath = "fonts/"                + ((faNumeric) ? "faDigit/" : "enDigit/")                + name                + ".ttf";        synchronized (cache) {            if (!cache.containsKey(assetPath)) {                Typeface t = Typeface.createFromAsset(MainApplication.getAppContext().getAssets(),                        assetPath);                cache.put(assetPath, t);            }            return (cache.get(assetPath) == null) ? cache.get(defaultFontStr) : cache.get(assetPath);        }    }    public static Typeface getSystemTextStyleTypeFace() {        return getTypeface("iran", false);    }    public static Typeface getSystemTextBoldStyleTypeFace() {        return getTypeface("iran-b", false);    }    public static Typeface getSystemDigitStyleTypeFace(boolean isDigitsPersian) {        return getTypeface("iran", isDigitsPersian);    }    public static Typeface getSystemDigitBoldStyleTypeFace(boolean isDigitsPersian) {        return getTypeface("iran-b",isDigitsPersian);    }    public static void setViewFADigitTypeFace(final View view) {        Typeface tf = getSystemDigitStyleTypeFace(true);        setViewTypeFace(view, tf);    }        public static void setViewENDigitTypeFace(final View view) {        Typeface tf = getSystemDigitStyleTypeFace(false);                setViewTypeFace(view, tf);    }    public static void setViewFADigitBoldStyleTypeFace(final View view) {        Typeface tfBold = getSystemDigitBoldStyleTypeFace(true);        setViewTypeFace(view, tfBold);    }        public static void setViewENDigitBoldStyleTypeFace(final View view) {        Typeface tfBold = getSystemDigitBoldStyleTypeFace(false);        setViewTypeFace(view, tfBold);            }    public static void setViewTextStyleTypeFace(final View view) {        Typeface tf = getSystemTextStyleTypeFace();        setViewTypeFace(view, tf);    }    public static void setViewTextBoldStyleTypeFace(final View view) {        Typeface tfBold = getSystemTextBoldStyleTypeFace();        setViewTypeFace(view, tfBold);    }    public static void setViewTypeFace(final View view, Typeface tf) {        if (view instanceof EditText) {            //((EditText) view).setLineSpacing(0.8f , 0.8f);            ((EditText) view).setTypeface(tf);            return;        } else if (view instanceof TextView) {            //((TextView) view).setLineSpacing(0.8f , 0.8f);            ((TextView) view).setTypeface(tf);            return;        } else if (view instanceof Button) {            ((Button) view).setTypeface(tf);            return;        } else if (view instanceof CheckBox) {            ((CheckBox) view).setTypeface(tf);            return;        } else if (view instanceof ViewGroup) {            ViewGroup parent = (ViewGroup) view;            for (int i = 0; i < parent.getChildCount(); i++) {                setViewTypeFace(parent.getChildAt(i), tf);            }        }    }    public static void setUserFriendlyDateTime(TextView dateView , TextView timeView , PersianCalendar persianCalendar){        String date = persianCalendar.getPersianLongDate();        if (dateView != null)        dateView.setText(date);        if (timeView != null)        timeView.setText(persianCalendar.getShortTime());    }}